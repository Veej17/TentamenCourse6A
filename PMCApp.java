package tentamen;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import static tentamen.File_Calculation.lengte1;
import static tentamen.File_Calculation.lengte2;
import static tentamen.File_Calculation.mapOrganism2Tax;
import static tentamen.File_Calculation.mapTax2pub;
import tentamen.Tentamen;

/**
 * Created by Veerle on 14/03/2016.
 *
 * Class PMCApp bouwt de GUI van de applicatie. Hierin wordt ook de class
 * File_Calculation aangeroepen om alle overige data te genereren en in te
 * vullen
 */
public class PMCApp extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public PMCApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        File_Calculation.bestandTaxnames();                    // Het aanroepen van de methode bestandTaxnames in File_Calculation voor uitlezen van taxnames.txt
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();

        Object[] organismList = (Object[]) File_Calculation.organism.toArray(); //Het aanmaken van een lijst organisme voor de combiboxen 1 en 2

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String[]{
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        // Het vullen van de Combibox1 met de lijst organismes.
        //jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(organismList));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Homo sapiens", "Plasmodium falciparum 3D7", "Plasmodium falciparum FCBR/Columbia", "Plasmodium falciparum 311", "Plasmodium falciparum 7G8", "Plasmodium falciparum Dd2", "Plasmodium falciparum IMR143", "Plasmodium falciparum KF1916", "Plasmodium falciparum Palo Alto/Uganda", "Plasmodium falciparum TAK 9", "Myxococcus fulvus", "Helicobacter pylori"}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        //Het vullen van combobox2 met de lijst organismes 
        //jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(organismList));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Homo sapiens", "Plasmodium falciparum 3D7", "Plasmodium falciparum FCBR/Columbia", "Plasmodium falciparum 311", "Plasmodium falciparum 7G8", "Plasmodium falciparum Dd2", "Plasmodium falciparum IMR143", "Plasmodium falciparum KF1916", "Plasmodium falciparum Palo Alto/Uganda", "Plasmodium falciparum TAK 9", "Myxococcus fulvus", "Helicobacter pylori"}));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String[]{
                    "Tax_id", "Gene_id", "Description", "Symbol"
                }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setText("Taxonomy");

        jLabel2.setText("PubMedID");

        jLabel3.setText("Genen gevonden in het artikem met PubMedID:");

        jTextArea1.setColumns(18);
        jTextArea1.setRows(4);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel1.setBackground(new java.awt.Color(231, 224, 224));
        jPanel1.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel2)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel1)
                                                        .addGap(25, 25, 25)
                                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 36, Short.MAX_VALUE)))
                        .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel2)
                                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jLabel3)
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
        );

        pack();
    }

// na het selecteren van een waarde in combobox1 wordt gevraagt om een waarde in combobox2 te zetten
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {
        jTextArea1.setText("Selecteer een waarde in dropmenu2.");

    }

// Na het selecteren van een waarde in combobox2 wordt gevraagt om een moment geduld en wordt de berekening ingevuld
// ook wordt hier jTextArea1Info aangeroepen waar de verdere berekening wordt gemaakt.
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {
        jTextArea1.setText("Berekening wordt uitgevoerd. \nEen moment geduld a.u.b..");
        jTextArea1Info();
    }

    /**
     * methode: jTextArea1Info
     * functie: vanuit de geselecteerde waardes in combobox 1 en 2 wordt uit de class File_calculation de methode berekening aangeroepen 
     *          waaruit de overlap en het aantal pubmeds bij de geselecteerde organismes wordt gehaald.
     * parameters: geen
     * retourneerd: niets 
     * exceptions: geen
     */
    private void jTextArea1Info() {
        if (jComboBox1.getSelectedItem() != null) {
            String org2 = (String) jComboBox2.getSelectedItem();
            String org1 = (String) jComboBox1.getSelectedItem();
            File_Calculation.berekening(org1, org2);
            HashSet overlap = File_Calculation.overlap;
            int lengteOverlap = overlap.size();
            String lengte1 = File_Calculation.lengte1;
            String lengte2 = File_Calculation.lengte2;
            File_Calculation.organism.toArray();
            
            // de tekst in de textarea wordt veranderd in het aantal artikelen gevonden per geselecteerd organisme en daarbij de overlap
            // Daarna wordt een array gevormd voor het aanroepen van de ChartCanvas class waar de pie chard wordt gevormd
            jTextArea1.setText("Aantal artikelen in PubMed met: " + "\n" + org1 + ": " + lengte1 + "\n" + org2 + ": " + lengte2 + "\n" + "Overlap: " + Integer.toString(lengteOverlap));
            Integer[] arrLengtes = new Integer[3];
            arrLengtes[0] = Integer.parseInt(lengte1);
            arrLengtes[1] = Integer.parseInt(lengte2);
            arrLengtes[2] = lengteOverlap;

            //Het aanroepen van de class ChartCanvas met als parameter de array arrLengtes
            chartCanvas = new ChartCanvas("pubmed", arrLengtes);
            jPanel1.add(chartCanvas.createDemoPanel());

            Object[] pubmedList = (Object[]) overlap.toArray();
            
            // Combobox3 wordt gevult met de overlappende pubmedID's
            jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(pubmedList));

            // Na het selecteren van een overlappende pubMedID wordt de actionperformd van combobox3 aangeroepen
            jComboBox3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox3ActionPerformed(evt);
                }
            });

        }
    }

    /**
     * methode: jComboBox3ActionPreformd
     * funtie: vanuit hier wordt het genID achterhaald dat bij de pubmedID hoort uit de gene2PubMedID
     * parameters: de event die uitgevoerd wordt
     * retourneerd: niets
     * exceptions: geen
     * opmerking: Deze functie is nog niet uitgewerkt.
     */
    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {
        int pubmed = (int) jComboBox3.getSelectedItem();
        System.out.println(Integer.toString(pubmed));
        String genID = File_Calculation.mapPub2Gene.get(pubmed);
        System.out.println("gen" + genID);
        File_Calculation.genBerekening(genID);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PMCApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PMCApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PMCApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PMCApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PMCApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private ChartCanvas chartCanvas;
    // End of variables declaration                   
}
